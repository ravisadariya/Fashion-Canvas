@model IEnumerable<TheFashionCanvas.Models.Product>

@{
    ViewData["Title"] = "Products";
    var currentCategoryId = ViewContext.HttpContext.Request.Query["categoryId"].ToString();
    var currentSortOrder = ViewContext.HttpContext.Request.Query["sortOrder"].ToString();
}

<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="~/css/products.css" />
</head>
<body>
<div class="container mt-4">
    <h2 class="mb-4 text-center text-primary">@ViewData["Title"]</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="toast-container position-fixed top-0 end-0 p-3">
            <div class="toast show bg-success text-white" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        <i class="bi bi-check-circle-fill me-2"></i>@TempData["SuccessMessage"]
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        </div>
    }

    <div class="row mb-4 ">
            <div class="col-md-3 filter-box">
                <div class="shadow-sm border-0 filter-box">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Filter Products</h5>
                </div>
                    <div class="card-body category-body">
                    <form method="get" asp-action="Index">
                        <div class="form-group">
                            <label for="categoryId">Category</label>
                            <select id="categoryId" name="categoryId" class="form-control" onchange="this.form.submit()">
                                <option value="">All Categories</option>
                                @foreach (var category in ViewBag.Categories)
                                {
                                    var selectedAttribute = category.CategoryId.ToString() == currentCategoryId ? " selected=\"selected\"" : "";
                                    @Html.Raw($"<option value=\"{category.CategoryId}\"{selectedAttribute}>{category.Name}</option>")
                                }
                            </select>
                        </div>

                        <div class="mt-3 mb-4">
                            <a asp-action="Index" class="btn btn-secondary btn-block"><i class="bi bi-x-circle"></i> Clear Filters</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-md-9">
            <div class="btn-group mb-3" role="group" aria-label="Sort Options">
                <a asp-action="Index" asp-route-categoryId="@currentCategoryId" asp-route-sortOrder="" class="btn btn-outline-primary @(string.IsNullOrEmpty(currentSortOrder) ? "active" : "")"><i class="bi bi-sort-alpha-down"></i> Sort by Name Ascending</a>
                <a asp-action="Index" asp-route-categoryId="@currentCategoryId" asp-route-sortOrder="name_desc" class="btn btn-outline-primary @(currentSortOrder == "name_desc" ? "active" : "")"><i class="bi bi-sort-alpha-up"></i> Sort by Name Descending</a>
                <a asp-action="Index" asp-route-categoryId="@currentCategoryId" asp-route-sortOrder="Price" class="btn btn-outline-primary @(currentSortOrder == "Price" ? "active" : "")"><i class="bi bi-sort-numeric-down"></i> Sort by Price Ascending</a>
                <a asp-action="Index" asp-route-categoryId="@currentCategoryId" asp-route-sortOrder="price_desc" class="btn btn-outline-primary @(currentSortOrder == "price_desc" ? "active" : "")"><i class="bi bi-sort-numeric-up"></i> Sort by Price Descending</a>
            </div>

            @if (!Model.Any())
            {
                <div class="alert alert-info text-center" role="alert">
                    <i class="bi bi-info-circle"></i> No products available.
                </div>
            }
            else
            {
                <div class="row">
                    @foreach (var item in Model)
                    {
                        <div class="col-md-4 mb-4">
                            <div class="card h-100 shadow-sm border-0">
                                @if (!string.IsNullOrEmpty(item.ImagePath))
                                {
                                    <img src="~/images/@item.ImagePath" class="card-img-top product-image" alt="@item.Name">
                                }
                                <div class="card-body">
                                    <h5 class="card-title text-dark">@item.Name</h5>
                                    <p class="card-text text-truncate text-muted">@item.Description</p>
                                    <p class="card-text"><strong>Price:</strong> <span class="text-success">@item.Price.ToString("C")</span></p>
                                    <p class="card-text"><strong>Stock:</strong> <span class="text-warning">@item.Stock</span></p>
                                    <a href="@Url.Action("Details", new { id = item.ProductId })" class="btn btn-primary btn-block"><i class="bi bi-eye"></i> View Details</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var toastElList = [].slice.call(document.querySelectorAll('.toast'))
            var toastList = toastElList.map(function (toastEl) {
                return new bootstrap.Toast(toastEl, { autohide: true, delay: 3000 })
            })
            toastList.forEach(toast => toast.show())
        });
    </script>
}
</body>
</html>
